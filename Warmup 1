#------Sleep_in-------

#The parameter weekday is True if it is a weekday, and the parameter vacation is
#True if we are on vacation. We sleep in if it is not a weekday or we're on
#vacation. Return True if we sleep in.


def Sleep_in(weekday, vacation):
    if not weekday or vacation:
        return True
    else:
        return False

#--------Monkey Trouble------

#We have two monkeys, a and b, and the parameters a_smile and b_smile indicate
#if each is smiling. We are in trouble if they are both smiling or if neither of
#is smiling. Return True if we are in trouble.

def monkey_trouble(a_smile, b_smile):
    if a_smile and b_smile:
        return True
    if not a_smile and not b_smile:
        return True
    else:
        return False

#---------Sum_double-------

#Given two int values, return their sum. Unless the two valuse are the same,
#then return double their sum.

def sum_double(a,b):
    if a == b:
        return (a + b) * 2
    else:
        return a + b


#-------diff21---------

#Given and int n, return the absolute difference between n and 21, except Return
#double the absolute difference if n is over 21.

def diff21(n):
    if n > 21:
        return abs(n - 21) * 2
    if n <= 21:
        return abs(21 - n)

#-------Parrot_Trouble

#We have a loud talking parrot. The "hour" parameter is current hour time in the
#range 0-23. We are in trouble if the parrot is talking and the hour before 7
#or after 20. Return True if we are in trouble.

def parrot_trouble(talking, hour):
    if talking:
        if hour >20 or hour < 7:
            return True
        else:
            return False
    else:
        return False

#-------Makes10

#Given 2 ints, a and b, return True if one of them is 10 or if their sum is 10

def Makes10(a,b):
    if a + b == 10:
        return True
    if a == 10 or b == 10:
        return True
    else:
        return False

#-------near_hundred

#Given and in n, return True if it is within 10 of 100 or 10 of 200.

def near_hundred(n):
    if (abs(100-n) <= 10) or (abs(200 - n) <= 10):
        return True
    else:
        return False


#---------pos_neg

#Given 2 int values, return True if one is negative and one is positive. Except
#if the parameter "negative" is True, then return True only if both are negative.

def pos_neg(a, b, negative):
    if negative:
        return (a < 0 and b < 0)
    else:
        return ((a < 0 and b > 0) or (a > 0 and b < 0))


# ---------not_string

#Given a string, return a new string where "not" has been added to the front
#However, if the string already begins with "not", return the string unchanged.

def not_string(str):
    if len(str) >= 3 and str[:3] == 'not':
        return str
    else:
        return "not " + str
